---
# tasks file for tomcat-war-deploy
- name: Display hostname
  debug:
    var: ansible_fqdn

- name: Test URL status from local machine
  uri:
    url: "{{ test_url }}"
    status_code: 200
  register: url_status
  delegate_to: localhost

- name: Display URL status
  debug: 
    msg: "Pre-check URL loading fine"
  when: url_status.status == 200

- name: Stop the tomcat service
  service:
    name: tomcat 
    state: stopped
  when: url_status.status == 200

- name: Backup the previous version of the WAR files to /tmp directory
  copy:
    src: '{{ item.backup_src }}'
    dest: '{{ item.backup_dest }}'
    remote_src: yes
  loop: "{{ backup_files }}"

- name: Remove the previous version of the WAR and expanded directory
  file:
    path: "/opt/tomcat9/webapps/{{ item.remove_war }}"
    state: absent
  loop: "{{ remove_wars }}"

- name: Remove the previous version of the expanded directory
  file:
    path: '/opt/tomcat9/webapps/{{ item.remove_file }}'
    state: absent
  loop: "{{ remove_files }}"
    
- name: Verify the previous contents are gone
  command: "ls -al /opt/tomcat9/webapps/"
  register: list_status

- name: Display list
  debug:
    var: list_status.stdout_lines

    #- name: Download new deployment file
    #  get_url:
    #    url: http://localhost/admin.war
    #   dest: /opt/tomcat9/webapps/admin.war

- name: copy file to dest
  copy:
    src: "{{ item.war_src }}"
    dest: "{{ item.war_dest }}"
  loop: "{{ new_wars }}"
  

- name: set file permissions
  file: 
    path: "{{ item.war_dest }}"
    mode: 0777
    owner: tomcat 
    group: tomcat
  loop: "{{ new_wars }}"
      #notify: start tomcat

- name: start tomcat service
  service:
    name: tomcat
    state: restarted

- name: wait for 20 second for URL to load
  wait_for:
    timeout: 20
    
- name: Verify war is deployed
  command: "ls -al /opt/tomcat9/webapps/"
  register: list_status

- name: Display list
  debug:
    var: list_status.stdout_lines


- name: Get URL status
  uri:  
    url: "{{ test_url }}"
    return_content: yes
    status_code: 200
  register: deployment_status
  delegate_to: localhost

- name: Display deployment status
  debug:
    msg: "WAR file Deployment successfully on servera.example.com"
  when: deployment_status.status == 200